{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","filterBy","setFilterBy","value","setValue","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","useState","user","setUser","userId","useEffect","getUser","foundUser","href","email","name","App","setTodos","query","setQuery","loading","setLoading","result","todosToShow","useMemo","filter","filterTitle","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65896c2f.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectedTodo, setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const { id, title, completed } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': selectedTodo?.id === id },\n            )}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                completed ? 'has-text-success' : 'has-text-danger',\n              )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    (selectedTodo?.id === id\n                      ? 'fa-eye-slash'\n                      : 'fa-eye'\n                    ),\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { FilterType } from '../../types/Todo';\n\ntype Props = {\n  filterBy: string,\n  setFilterBy: Dispatch<SetStateAction<FilterType>>,\n  value: string,\n  setValue: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (({\n  filterBy, setFilterBy, value, setValue,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterBy}\n          onChange={(event) => setFilterBy(event.target.value as FilterType)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {value && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            aria-label=\"delete-button\"\n            onClick={() => setValue('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n));\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = (\n  { selectedTodo, setSelectedTodo },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n  const {\n    id, title, completed, userId,\n  } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId).then(foundUser => setUser(foundUser));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user || !selectedTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"modal-button\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { FilterType, Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState<FilterType>('all');\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getTodos().then(result => setTodos(result));\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos().then(result => {\n      setTodos(result);\n      setLoading(false);\n    });\n  }, []);\n\n  const todosToShow = useMemo(() => {\n    return todos.filter(todo => {\n      const filterTitle = todo.title\n        .toLowerCase()\n        .includes(query.toLowerCase());\n\n      switch (filterBy) {\n        case 'active':\n          return !todo.completed && filterTitle;\n        case 'complete':\n          return todo.completed && filterTitle;\n        default:\n          return filterTitle;\n      }\n    });\n  }, [todos, query, filterBy]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                value={query}\n                setValue={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todosToShow}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}